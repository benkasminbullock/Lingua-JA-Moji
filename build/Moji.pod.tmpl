=encoding UTF-8

=head1 [% trans.name | upper %]

Lingua::JA::Moji - [% trans.abstract %]

=head1 [% trans.synopsis | upper %]

[% trans.synopsis_text %]

    use Lingua::JA::Moji qw/kana2romaji romaji2kana/;
    use utf8;
    my $romaji = kana2romaji ('あいうえお');
    # $romaji is now 'aiueo'.
    my $kana = romaji2kana ($romaji);
    # $kana is now 'アイウエオ'.

=head1 [% trans.description | upper %]

[% trans.description_body %]

[%- FOR function IN functions %]

[%- IF function.defined ('class') %]

[% class = function.class %]

=head1 [% trans.$class | upper %]
[% IF function.defined ('explain') %]
[% function.explain.$lang %]
[% END %]
[% ELSE %]

=head2 [% function.name %] 

[% IF function.defined ('abstract') -%]
[% function.abstract.$lang %].
[%- END %]

    use [% module %] '[% function.name %]';
[% IF function.defined ('eg') %]
[% function.eg | indent ('    ') %]
[%- IF function.defined ('out') && function.defined ('expect') %]
    # [% function.out %] = '[% function.expect %]'
[%- END %]
[% END %]
[% IF function.desc.defined (lang) %]

[% function.desc.$lang %]

[% END %]

[%- IF function.defined ('bugs') %]

=head3 [% trans.bugs %]

[% function.bugs.$lang %]

[%- END %]

[%- END %]

[%- END %]

=head1 [% trans.also | upper %]

[% trans.modules %]

=head2 [% trans.romajikanahenkan %]

=over

=item L<Data::Validate::Japanese>

This contains four validators for kanji and kana, C<is_hiragana>,
corresponding to L</is_hiragana> in this module, and three more,
C<is_kanji>, C<is_katakana>, and C<is_h_katakana>, for half-width
katakana.

=item L<Lingua::JA::Kana>

This contains convertors for hiragana, half width and full width
katakana, and romaji. As of version 0.07 [Aug 06, 2012], the romaji
conversion is less complete than this module.

=item L<Lingua::JA::Romanize::Japanese>

Romanization of Japanese. The module also includes romanization of
kanji via the kakasi kanji to romaji convertor, and other functions.

=item L<Lingua::JA::Romaji::Valid>

Validate romanized Japanese. This module does the same thing as
L</is_romaji> in Lingua::JA::Moji.

=item L<Lingua::JA::Hepburn::Passport>

Passport romanization, which means converting long vowels into
"OH". This corresponds to L</kana2romaji> in the current module using
the C<< passport => 1 >> option, for example

    $romaji = kana2romaji ("かとう", {style => 'hepburn', passport => 1});

=item L<Lingua::JA::Fold>

Full/half width conversion, collation of Japanese text.

=item L<Lingua::JA::Romaji>

Romaji to kana/kana to romaji conversion.

=item L<Lingua::JA::Regular::Unicode>

This includes hiragana to katakana, full width / half width, and wide
ascii conversion. The strange name is due to its being an extension of
L<Lingua::JA::Regular> using Unicode-encoded strings.

=item L<Lingua::JA::NormalizeText>

A huge collection of normalization functions for Japanese text. If
Lingua::JA::Moji does not have it, Lingua::JA::NormalizeText may do.

=item L<Lingua::KO::Munja>

This is similar to the present module for Korean.

=back

=head2 [% trans.kanjikanahenkan %]

=over

=item L<Lingua::JA::Romanize::MeCab>

Romanization of Japanese language with MeCab

=item L<Text::MeCab>

=item L<Lingua::JA::Romanize::Japanese>

Romanization of Japanese language via kakasi.

=back

=head2 [% trans.books %]

[% trans.naokitomitabook %]

[% IF lang == 'en' %]

=head1 NOTES

This section describes some of the terminology used elsewhere in the
documentation.

=head2 chouon

The long vowel marker, "ー", or I<chōon>, which is used in Japanese
katakana to indicate a lengthened vowel.

=head2 wide ASCII

Wide ASCII, fullwidth ASCII, or I<zenkaku eisūji> (全角英数字) are a
legacy of bitmapped fonts which has survived into the present
day. "Wide ascii" characters were originally special bitmapped font
characters created to be the same size as one kanji or kana
character. The name for normal ASCII characters in Japanese is
I<hankaku eisūji> (半角英数字), literally "half width English letters
and numerals".

=head2 halfwidth katakana

Halfwidth katakana, I<hankaku katakana> (半角かたかな) is a legacy
encoding of katakana based on an eight-bit encoding. See
L<http://www.sljfaq.org/afaq/half-width-katakana.html> for full
details.

=head2 syllabic n

In this document, "syllabic n" means the kana ん or ン.

[% END # lang == 'en' %]

=head1 EXPORT

This module exports its functions only on request. To export all the
functions in the module,

    use Lingua::JA::Moji ':all';

=head1 ACKNOWLEDGEMENTS

Thanks to Naoki Tomita, David Steinbrunner, and Neil Bowers for fixes.

=head1 HISTORY

"Moji" (文字) means "letters" in Japanese. I started Lingua::JA::Moji
out of a need for more comprehensive handling of Japanese text than
was offered by any of the existing modules on CPAN. There were a lot
of modules offering piecemeal romaji/kana conversions or
hiragana/katakana conversions, but, with apologies, nothing truly
comprehensive or robust. Lingua::JA::Moji was originally a private
module. Most of the functions in the module are things I needed for my
own projects.

The strange design, using L<Convert::Moji>, was part of an abandoned
plan to make a cross-language module which could produce, say, a
JavaScript converter doing the same things as this Perl one, using the
same text sources. 

I wasn't really sure whether to release it, but eventually I released
it to CPAN as a result of requests for the source code of an online
romaji/kana converter by website users. The module interface, in
particular the hash reference options to L</kana2romaji> and
L</romaji2kana>, is rather messy, the use of the digit "2" to mean
"to", as in "kana2romaji", was ill-considered, and some of the
defaults are rather strange, but since it was described in Naoki
Tomita's book, and some people may be using it as is, I'm not very
keen to change it in incompatible ways. As for the internals, at some
point when I have time I will be removing the dependence on
Convert::Moji, and very likely deleting that module from CPAN.

[% start_year=2008 %]
[% INCLUDE "author" %]
[% INCLUDE "terminology" %]
